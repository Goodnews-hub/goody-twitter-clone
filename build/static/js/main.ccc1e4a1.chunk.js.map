{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","alt","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccc1e4a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./SidebarOption.css\";\r\n\r\n\r\nfunction SidebarOption({ active, text, Icon}) {\r\n    return (\r\n        <div className={`sidebarOption ${active\r\n             && \"sidebarOption--active\"}`}>\r\n           <Icon />\r\n\r\n            <h2>{text}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport TwitterIcon from \r\n'@material-ui/icons/Twitter';\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <TwitterIcon className=\"sidebar__twitterIcon\"/>\r\n\r\n\r\n            <SidebarOption active Icon={HomeIcon}  text=\"Home\" />\r\n            <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n            <SidebarOption Icon={NotificationsNoneIcon}  text=\"Notifications\"/>\r\n            <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n            <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n            <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n            <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n           \r\n            <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>Tweet</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import firebase from \"firebase\";\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBH8iRNig3zDOtSzALKkLNsQ5GoRtZ3AFM\",\r\n    authDomain: \"goody-twitter-clone.firebaseapp.com\",\r\n    projectId: \"goody-twitter-clone\",\r\n    storageBucket: \"goody-twitter-clone.appspot.com\",\r\n    messagingSenderId: \"844465102866\",\r\n    appId: \"1:844465102866:web:dde75e8fab2260ed6cb8cb\",\r\n    measurementId: \"G-GCLDS7C33T\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\nexport default db; ","import { Button, Avatar } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './TweetBox.css';\r\nimport db from \"./firebase\";\r\n\r\nfunction TweetBox() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n    const sendTweet = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            displayName: \"Goodnews Samuel\",\r\n            username: \"U-Jones Creativity\",\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar: \r\n            \"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\",\r\n\r\n        });\r\n\r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form>\r\n              <div className=\"tweetBox__input\">\r\n                 <Avatar src=\"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\"/>\r\n                 \r\n                 <input\r\n                 onChange={(e) => setTweetMessage(e.target.value)}\r\n                  value={tweetMessage} \r\n                 placeholder=\"what's happening?\"\r\n                  type=\"text\" />\r\n              </div>\r\n\r\n              <input\r\n                 value={tweetImage}\r\n                 onChange={(e) => setTweetImage(e.target.value)}\r\n                className=\"tweetBox__imageInput\"\r\n                placeholder=\"Optional: Enter image URL\"\r\n                type=\"text\"\r\n                />\r\n\r\n              <Button onClick={sendTweet}\r\n               type=\"submit\"\r\n                className=\"tweetBox__tweetButton\">Tweet</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetBox;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { forwardRef } from 'react';\r\nimport './Post.css';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nconst Post = forwardRef(({ \r\n   displayName, \r\n   username,  \r\n   verified, \r\n   text, \r\n   image, \r\n   avatar\r\n}, ref) => {\r\n\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n        <div className=\"post__avatar\">\r\n        <Avatar src={avatar}/>\r\n           </div> \r\n           <div className=\"post__body\">\r\n             <div className=\"post__header\">\r\n             <div className=\"post__headerText\">\r\n                <h3>\r\n                   {displayName}{\" \"}\r\n                    <span className=\"post__headerSpecial\">\r\n                     {verified && <VerifiedUserIcon className=\"post__badge\" />}\r\n                       {username}\r\n                   </span>\r\n                </h3>\r\n             </div>\r\n             <div className=\"post__headerDescription\">\r\n                <p>{text}</p>\r\n             </div>\r\n             </div>\r\n             <img src={image}\r\n              alt=\"\"/>\r\n              <div className=\"post__footer\">\r\n                 <ChatBubbleOutlineIcon fontSize=\"small\"/>\r\n                 <RepeatIcon fontSize=\"small\"/>\r\n                 <FavoriteBorderIcon fontSize=\"small\"/>\r\n                 <PublishIcon fontSize=\"small\"/>\r\n              </div>\r\n           </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect }from 'react';\r\nimport \"./Feed.css\";\r\nimport TweetBox from \"./TweetBox\";\r\nimport Post from \"./Post\";\r\nimport db from \"./firebase\";\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot((snapshot) => (\r\n            setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        ))\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n        <div className=\"feed__header\">\r\n          <h2>Home</h2>  \r\n          </div>\r\n\r\n          <TweetBox />\r\n          <FlipMove>\r\n          {posts.map((post) => (\r\n          <Post \r\n          key={post.text}\r\n          displayName={post.displayName}\r\n          username={post.username}\r\n           verified={post.verified} \r\n          text={post.text}\r\n          avatar={post.avatar}\r\n          image={post.image}\r\n          />\r\n          ))}\r\n          </FlipMove>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport \"./widgets.css\";\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n          <div className=\"widgets__input\">\r\n            <div className=\"widgets__searchIcon\"/>\r\n                <SearchIcon className=\"widgets__searchIcon\" />\r\n                <input placeholder=\"Search Twitter\" type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"widgets__widgetContainer\">\r\n               <h2>What's happening</h2> \r\n\r\n               <TwitterTweetEmbed tweetId={\"858551177860055040\"}/>\r\n               \r\n               <TwitterTimelineEmbed\r\n                 sourceType=\"profile\"\r\n                 screenName=\"cleverqazi\"\r\n                 options={{ height: 400 }}\r\n               />\r\n               \r\n               <TwitterShareButton\r\n                 url={\"https://facebook.com/cleverprogrammer\"}\r\n                 options={{ text: \"#reactjs is awesome\", via: \"cleverquazi\" }}\r\n                 />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets;\r\n","import React from \"react\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n        <Sidebar />\n        <Feed />\n        <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}